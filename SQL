-- Create USERS table
CREATE TABLE users (
    CustomerID INT PRIMARY KEY AUTO_INCREMENT,
    UserName VARCHAR(50) NOT NULL,
    passcode VARCHAR(50) NOT NULL,
    Email VARCHAR(100) NULL,
    Phone VARCHAR(15) NOT NULL,
    User_type ENUM('customer', 'employee') NOT NULL
);

-- Create CUSTOMERS table referencing USERS
CREATE TABLE customers (
    CustomerID INT PRIMARY KEY,
    UserName VARCHAR(50) NOT NULL,
    Email VARCHAR(100),
    Phone VARCHAR(15),
    FOREIGN KEY (CustomerID) REFERENCES users(CustomerID)
);

-- Create EMPLOYEE table referencing USERS
CREATE TABLE employee (
    CustomerID INT PRIMARY KEY,
    UserName VARCHAR(50) NOT NULL,
    Email VARCHAR(100),
    Phone VARCHAR(15),
    FOREIGN KEY (CustomerID) REFERENCES users(CustomerID)
);

-- Create APPOINTMENTS table referencing USERS
CREATE TABLE appointments (
    id INT PRIMARY KEY AUTO_INCREMENT,
    customer_id INT,
    employee_id INT,
    service_type VARCHAR(50),
    appointment_time DATETIME,
    appointment_end DATETIME,
    calendar_event_id VARCHAR(100),
    status ENUM('scheduled', 'confirmed', 'cancelled') NOT NULL,
    FOREIGN KEY (customer_id) REFERENCES users(CustomerID),
    FOREIGN KEY (employee_id) REFERENCES users(CustomerID)
);

-- Create SERVICES table
CREATE TABLE services (
    service_id INT PRIMARY KEY AUTO_INCREMENT,
    service_name VARCHAR(100) NOT NULL,
    duration INT NOT NULL,
    price DECIMAL(10, 2) NOT NULL
);

-- Create EMPLOYEE_SCHEDULE table referencing USERS
CREATE TABLE employee_schedule (
    schedule_id INT PRIMARY KEY AUTO_INCREMENT,
    employee_id INT,
    day_of_week ENUM('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday') NOT NULL,
    start_time TIME NOT NULL,
    end_time TIME NOT NULL,
    FOREIGN KEY (employee_id) REFERENCES users(CustomerID)
);

-- Create SESSIONS table referencing USERS
CREATE TABLE sessions (
    session_id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT,
    session_token VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(CustomerID)
);
